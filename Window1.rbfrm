#tag WindowBegin Window Window1   BackColor       =   16777215   Backdrop        =   ""   CloseButton     =   True   Composite       =   True   Frame           =   0   FullScreen      =   False   HasBackColor    =   False   Height          =   4.98e+2   ImplicitInstance=   True   LiveResize      =   True   MacProcID       =   0   MaxHeight       =   32000   MaximizeButton  =   True   MaxWidth        =   32000   MenuBar         =   1408782882   MenuBarVisible  =   True   MinHeight       =   498   MinimizeButton  =   True   MinWidth        =   657   Placement       =   0   Resizeable      =   True   Title           =   "MAL Client OS X"   Visible         =   True   Width           =   6.57e+2   Begin maintoolbar maintoolbar1      Enabled         =   True      Height          =   47      Index           =   -2147483648      InitialParent   =   ""      Left            =   4      LockedInPosition=   False      Scope           =   0      TabPanelIndex   =   0      Top             =   -73      Visible         =   True      Width           =   473   End   Begin Timer Timer1      Height          =   32      Index           =   -2147483648      InitialParent   =   ""      Left            =   682      LockedInPosition=   False      Mode            =   2      Period          =   900000      Scope           =   0      TabPanelIndex   =   0      Top             =   253      Width           =   32   End   Begin PagePanel PagePanel1      AutoDeactivate  =   True      Enabled         =   True      Height          =   498      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Left            =   0      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   True      LockTop         =   True      PanelCount      =   2      Panels          =   ""      Scope           =   0      TabIndex        =   13      TabPanelIndex   =   0      Top             =   0      Value           =   0      Visible         =   True      Width           =   657      Begin BevelButton DeleteBut         AcceptFocus     =   False         AutoDeactivate  =   True         BackColor       =   0         Bevel           =   0         Bold            =   False         ButtonType      =   0         Caption         =   "Remove"         CaptionAlign    =   3         CaptionDelta    =   0         CaptionPlacement=   1         Enabled         =   False         HasBackColor    =   False         HasMenu         =   0         Height          =   18         HelpTag         =   ""         Icon            =   ""         IconAlign       =   0         IconDX          =   0         IconDY          =   0         Index           =   -2147483648         InitialParent   =   "PagePanel1"         Italic          =   False         Left            =   7         LockBottom      =   True         LockedInPosition=   False         LockLeft        =   True         LockRight       =   ""         LockTop         =   False         MenuValue       =   0         Scope           =   0         TabIndex        =   1         TabPanelIndex   =   1         TabStop         =   True         TextColor       =   0         TextFont        =   "System"         TextSize        =   11         TextUnit        =   0         Top             =   477         Underline       =   False         Value           =   False         Visible         =   True         Width           =   65      End      Begin BevelButton UpdateBut         AcceptFocus     =   False         AutoDeactivate  =   True         BackColor       =   0         Bevel           =   4         Bold            =   False         ButtonType      =   0         Caption         =   "Update"         CaptionAlign    =   3         CaptionDelta    =   0         CaptionPlacement=   1         Enabled         =   False         HasBackColor    =   False         HasMenu         =   0         Height          =   18         HelpTag         =   ""         Icon            =   ""         IconAlign       =   2         IconDX          =   0         IconDY          =   0         Index           =   -2147483648         InitialParent   =   "PagePanel1"         Italic          =   False         Left            =   76         LockBottom      =   True         LockedInPosition=   False         LockLeft        =   True         LockRight       =   ""         LockTop         =   False         MenuValue       =   0         Scope           =   0         TabIndex        =   2         TabPanelIndex   =   1         TabStop         =   True         TextColor       =   0         TextFont        =   "System"         TextSize        =   11         TextUnit        =   0         Top             =   477         Underline       =   False         Value           =   False         Visible         =   True         Width           =   71      End      Begin PushButton SearchButton         AutoDeactivate  =   True         Bold            =   ""         Cancel          =   ""         Caption         =   "Search"         Default         =   ""         Enabled         =   True         Height          =   20         HelpTag         =   ""         Index           =   -2147483648         InitialParent   =   "PagePanel1"         Italic          =   ""         Left            =   566         LockBottom      =   ""         LockedInPosition=   False         LockLeft        =   ""         LockRight       =   True         LockTop         =   True         Scope           =   0         TabIndex        =   3         TabPanelIndex   =   2         TabStop         =   True         TextFont        =   "System"         TextSize        =   13         TextUnit        =   0         Top             =   7         Underline       =   ""         Visible         =   True         Width           =   80      End      Begin TextField SearchBox         AcceptTabs      =   ""         Alignment       =   0         AutoDeactivate  =   True         BackColor       =   16777215         Bold            =   ""         Border          =   True         CueText         =   "Enter a Search Term Here"         DataField       =   ""         DataSource      =   ""         Enabled         =   True         Format          =   ""         Height          =   22         HelpTag         =   ""         Index           =   -2147483648         InitialParent   =   "PagePanel1"         Italic          =   ""         Left            =   69         LimitText       =   0         LockBottom      =   ""         LockedInPosition=   False         LockLeft        =   True         LockRight       =   True         LockTop         =   True         Mask            =   ""         Password        =   ""         ReadOnly        =   ""         Scope           =   0         TabIndex        =   4         TabPanelIndex   =   2         TabStop         =   True         Text            =   ""         TextColor       =   0         TextFont        =   "System"         TextSize        =   13         TextUnit        =   0         Top             =   7         Underline       =   ""         UseFocusRing    =   True         Visible         =   True         Width           =   488      End      Begin StaticText LblSearch         AutoDeactivate  =   True         Bold            =   ""         DataField       =   ""         DataSource      =   ""         Enabled         =   True         Height          =   20         HelpTag         =   ""         Index           =   -2147483648         InitialParent   =   "PagePanel1"         Italic          =   ""         Left            =   10         LockBottom      =   ""         LockedInPosition=   False         LockLeft        =   True         LockRight       =   ""         LockTop         =   True         Multiline       =   ""         Scope           =   0         TabIndex        =   5         TabPanelIndex   =   2         Text            =   "Search:"         TextAlign       =   0         TextColor       =   0         TextFont        =   "System"         TextSize        =   13         TextUnit        =   0         Top             =   7         Underline       =   ""         Visible         =   True         Width           =   100      End      Begin ProgressWheel SearchWheel         AutoDeactivate  =   True         Enabled         =   True         Height          =   16         HelpTag         =   ""         Index           =   -2147483648         InitialParent   =   "PagePanel1"         Left            =   617         LockBottom      =   ""         LockedInPosition=   False         LockLeft        =   ""         LockRight       =   True         LockTop         =   True         Scope           =   0         TabIndex        =   6         TabPanelIndex   =   2         TabStop         =   True         Top             =   478         Visible         =   False         Width           =   16      End      Begin StaticText searchresults         AutoDeactivate  =   True         Bold            =   ""         DataField       =   ""         DataSource      =   ""         Enabled         =   True         Height          =   20         HelpTag         =   ""         Index           =   -2147483648         InitialParent   =   "PagePanel1"         Italic          =   ""         Left            =   10         LockBottom      =   False         LockedInPosition=   False         LockLeft        =   True         LockRight       =   True         LockTop         =   True         Multiline       =   ""         Scope           =   0         TabIndex        =   7         TabPanelIndex   =   2         Text            =   ""         TextAlign       =   0         TextColor       =   0         TextFont        =   "System"         TextSize        =   11         TextUnit        =   0         Top             =   476         Underline       =   ""         Visible         =   True         Width           =   582      End      Begin BevelButton MUpdate         AcceptFocus     =   False         AutoDeactivate  =   True         BackColor       =   0         Bevel           =   0         Bold            =   False         ButtonType      =   0         Caption         =   "MUpdate"         CaptionAlign    =   3         CaptionDelta    =   0         CaptionPlacement=   1         Enabled         =   False         HasBackColor    =   False         HasMenu         =   0         Height          =   18         HelpTag         =   "Post a Melative Update"         Icon            =   ""         IconAlign       =   0         IconDX          =   0         IconDY          =   0         Index           =   -2147483648         InitialParent   =   "PagePanel1"         Italic          =   False         Left            =   150         LockBottom      =   True         LockedInPosition=   False         LockLeft        =   True         LockRight       =   ""         LockTop         =   ""         MenuValue       =   0         Scope           =   0         TabIndex        =   3         TabPanelIndex   =   1         TabStop         =   True         TextColor       =   0         TextFont        =   "System"         TextSize        =   11         TextUnit        =   0         Top             =   477         Underline       =   False         Value           =   False         Visible         =   True         Width           =   67      End      Begin StaticText StaticText1         AutoDeactivate  =   True         Bold            =   ""         DataField       =   ""         DataSource      =   ""         Enabled         =   True         Height          =   20         HelpTag         =   ""         Index           =   -2147483648         InitialParent   =   "PagePanel1"         Italic          =   ""         Left            =   6         LockBottom      =   ""         LockedInPosition=   False         LockLeft        =   True         LockRight       =   ""         LockTop         =   True         Multiline       =   ""         Scope           =   0         TabIndex        =   4         TabPanelIndex   =   1         Text            =   "Filter:"         TextAlign       =   0         TextColor       =   0         TextFont        =   "System"         TextSize        =   12         TextUnit        =   0         Top             =   8         Underline       =   ""         Visible         =   True         Width           =   100      End      Begin ProgressWheel listwheel         AutoDeactivate  =   True         Enabled         =   True         Height          =   16         HelpTag         =   ""         Index           =   -2147483648         InitialParent   =   "PagePanel1"         Left            =   621         LockBottom      =   ""         LockedInPosition=   False         LockLeft        =   True         LockRight       =   ""         LockTop         =   True         Scope           =   0         TabIndex        =   6         TabPanelIndex   =   1         TabStop         =   True         Top             =   477         Visible         =   False         Width           =   16      End      Begin Listbox results         AutoDeactivate  =   True         AutoHideScrollbars=   True         Bold            =   False         Border          =   False         ColumnCount     =   1         ColumnsResizable=   ""         ColumnWidths    =   ""         DataField       =   ""         DataSource      =   ""         DefaultRowHeight=   -1         Enabled         =   True         EnableDrag      =   ""         EnableDragReorder=   ""         GridLinesHorizontal=   0         GridLinesVertical=   0         HasHeading      =   True         HeadingIndex    =   -1         Height          =   440         HelpTag         =   ""         Hierarchical    =   True         Index           =   -2147483648         InitialParent   =   "PagePanel1"         InitialValue    =   ""         Italic          =   False         Left            =   0         LockBottom      =   True         LockedInPosition=   False         LockLeft        =   True         LockRight       =   True         LockTop         =   True         RequiresSelection=   ""         Scope           =   0         ScrollbarHorizontal=   ""         ScrollBarVertical=   True         SelectionType   =   0         TabIndex        =   0         TabPanelIndex   =   2         TabStop         =   True         TextFont        =   "System"         TextSize        =   11         TextUnit        =   2         Top             =   34         Underline       =   ""         UseFocusRing    =   False         Visible         =   True         Width           =   657         _ScrollWidth    =   -1      End      Begin MacOSXSearchField MacOSXSearchField1         Active          =   0         Enabled         =   True         HasSearchIcon   =   0         Height          =   32         Index           =   -2147483648         InitialParent   =   "PagePanel1"         Left            =   589         LiveSearch      =   True         LockedInPosition=   False         Scope           =   0         TabPanelIndex   =   1         Top             =   8         Visible         =   True         Width           =   32      End      Begin PopupMenu filtermenu         AutoDeactivate  =   True         Bold            =   ""         DataField       =   ""         DataSource      =   ""         Enabled         =   True         Height          =   19         HelpTag         =   ""         Index           =   -2147483648         InitialParent   =   "PagePanel1"         InitialValue    =   "watching\rcompleted\ron-hold\rdropped\rplan to watch"         Italic          =   ""         Left            =   49         ListIndex       =   0         LockBottom      =   ""         LockedInPosition=   False         LockLeft        =   True         LockRight       =   ""         LockTop         =   True         Scope           =   0         TabIndex        =   5         TabPanelIndex   =   1         TabStop         =   True         TextFont        =   "System"         TextSize        =   0         TextUnit        =   0         Top             =   7         Underline       =   ""         Visible         =   True         Width           =   126      End      Begin Listbox yourlist         AutoDeactivate  =   True         AutoHideScrollbars=   True         Bold            =   ""         Border          =   False         ColumnCount     =   1         ColumnsResizable=   False         ColumnWidths    =   ""         DataField       =   ""         DataSource      =   ""         DefaultRowHeight=   -1         Enabled         =   True         EnableDrag      =   ""         EnableDragReorder=   ""         GridLinesHorizontal=   0         GridLinesVertical=   0         HasHeading      =   False         HeadingIndex    =   -1         Height          =   440         HelpTag         =   ""         Hierarchical    =   True         Index           =   -2147483648         InitialParent   =   "PagePanel1"         InitialValue    =   ""         Italic          =   ""         Left            =   0         LockBottom      =   True         LockedInPosition=   False         LockLeft        =   True         LockRight       =   True         LockTop         =   True         RequiresSelection=   ""         Scope           =   0         ScrollbarHorizontal=   ""         ScrollBarVertical=   True         SelectionType   =   0         TabIndex        =   0         TabPanelIndex   =   1         TabStop         =   True         TextFont        =   "System"         TextSize        =   11         TextUnit        =   0         Top             =   34         Underline       =   ""         UseFocusRing    =   False         Visible         =   True         Width           =   657         _ScrollWidth    =   -1      End   EndEnd#tag EndWindow#tag WindowCode	#tag Event		Sub Close()		  //Save window position		  SaveWindowPosition		  //Save window size		  SaveWindowSize		  // Save List Type		  app.prefs.root.SetString("List", list)		  // Quit application		  quit		End Sub	#tag EndEvent	#tag Event		Sub Open()		  me.HasToolbarButton = false		  self.windowset		  		  //load saved window position from preferences.		  LoadWindowPosition		  loadsearchbox		  loadwindowsize		  		  me.title = "MAL Client OS X - (Logged in as " + app.memusername + ")"		  		  // Load the list type		  list = app.prefs.root.GetString("List","Anime")		  		  // Load Approperate List		  SwitchList		  		  		End Sub	#tag EndEvent	#tag Event		Sub Resized()		  MacOSXSearchField1.Left = (self.width - (MacOSXSearchField1.Width + 10))		End Sub	#tag EndEvent	#tag Event		Sub Resizing()		  MacOSXSearchField1.Left = (self.width - (MacOSXSearchField1.Width + 10))		End Sub	#tag EndEvent	#tag MenuHandler		Function FileClose() As Boolean Handles FileClose.Action			me.close			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function Untitled() As Boolean Handles Untitled.Action						Return True					End Function	#tag EndMenuHandler	#tag Method, Flags = &h0		Sub filterlist()		  yourlist.DeleteAllRows		  yourlist.visible = false		  dim t as new dictionary		  for i = 0 to l.Count -1		    If list = "anime" then		      if l.value(l.key(i)) isa dictionary then		        t = l.value(l.key(i))		        If t.Value("watched_status") = filtermenu.text then		          Yourlist.AddRow(t.Value("id"))		          Yourlist.Cell(Yourlist.LastIndex, 1) = t.Value("title")		          Yourlist.Cell(Yourlist.LastIndex, 2) = t.Value("type")		          // To avoid division by zero error		          if t.value("episodes") = "0" or t.value("episodes") = "" then		            Yourlist.Cell(Yourlist.LastIndex, 3) = t.Value("watched_episodes") + "/ - "		            Yourlist.Cell(Yourlist.LastIndex, 4) = " - %"		          else		            Yourlist.Cell(Yourlist.LastIndex, 3) = t.Value("watched_episodes") + "/" + t.Value("episodes")		            Yourlist.Cell(Yourlist.LastIndex, 4) = cstr(round(val(t.Value("watched_episodes"))/val(t.value("episodes"))*100) )+ "%"		          end if		          Yourlist.Cell(Yourlist.LastIndex, 5) = t.Value("score")		        else		        end if		      else		      end if		    else		      if l.value(l.key(i)) isa dictionary then		        t = l.value(l.key(i))		        If t.Value("read_status") = filtermenu.text then		          Yourlist.AddRow(t.Value("id"))		          Yourlist.Cell(Yourlist.LastIndex, 1) = t.Value("title")		          if t.value("chapters") = "0" or t.value("chapters") = "" then		            Yourlist.Cell(Yourlist.LastIndex, 2) = t.Value("chapters_read") + "/ -"		          else		            Yourlist.Cell(Yourlist.LastIndex, 2) = t.Value("chapters_read") + "/" + t.value("chapters")		          end if		          // To avoid division by zero error		          if t.value("volumes") = "0" or t.value("volumes") = "" then		            Yourlist.Cell(Yourlist.LastIndex, 3) = t.Value("volumes_read") + "/ - "		          else		            Yourlist.Cell(Yourlist.LastIndex, 3) = t.Value("volumes_read") + "/" + t.Value("volumes")		          end if		          Yourlist.Cell(Yourlist.LastIndex, 4) = t.Value("score")		        else		        end if		      end if		    end if		  next		  yourlist.listboxsort(1)		  yourlist.visible = true		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub listsearch(searchterm as string)		  Dim rg as New RegEx		  Dim myMatch as RegExMatch		  dim t as new dictionary		  yourlist.DeleteAllRows		  yourlist.visible = false		  for i = 0 to l.Count -1		    if l.value(l.key(i)) isa dictionary then		      t = l.value(l.key(i))		      If list = "Anime" then		        If t.Value("watched_status") = filtermenu.text then		          try		            rg.SearchPattern=searchterm		            myMatch=rg.search(t.Value("title"))		            if myMatch <> Nil then		              Yourlist.AddRow(t.Value("id"))		              Yourlist.Cell(Yourlist.LastIndex, 1) = t.Value("title")		              Yourlist.Cell(Yourlist.LastIndex, 2) = t.Value("type")		              // To avoid division by zero error		              if t.value("episodes") = "0" or t.value("episodes") = "" then		                Yourlist.Cell(Yourlist.LastIndex, 3) = t.Value("watched_episodes") + "/ - "		                Yourlist.Cell(Yourlist.LastIndex, 4) = " - %"		              else		                Yourlist.Cell(Yourlist.LastIndex, 3) = t.Value("watched_episodes") + "/" + t.Value("episodes")		                Yourlist.Cell(Yourlist.LastIndex, 4) = cstr(round(val(t.Value("watched_episodes"))/val(t.value("episodes"))*100) )+ "%"		              end if		              Yourlist.Cell(Yourlist.LastIndex, 5) = t.Value("score")		            else		            End if		          catch		          end try		        else		        end if		      else		        If t.Value("read_status") = filtermenu.text then		          try		            rg.SearchPattern=searchterm		            myMatch=rg.search(t.Value("title"))		            if myMatch <> Nil then		              Yourlist.AddRow(t.Value("id"))		              Yourlist.Cell(Yourlist.LastIndex, 1) = t.Value("title")		              if t.value("chapters") = "0" or t.value("chapters") = "" then		                Yourlist.Cell(Yourlist.LastIndex, 2) = t.Value("chapters_read") + "/ -"		              else		                Yourlist.Cell(Yourlist.LastIndex, 2) = t.Value("chapters_read") + "/" + t.value("chapters")		              end if		              // To avoid division by zero error		              if t.value("volumes") = "0" or t.value("volumes") = "" then		                Yourlist.Cell(Yourlist.LastIndex, 3) = t.Value("volumes_read") + "/ - "		              else		                Yourlist.Cell(Yourlist.LastIndex, 3) = t.Value("volumes_read") + "/" + t.Value("volumes")		              end if		              Yourlist.Cell(Yourlist.LastIndex, 4) = t.Value("score")		            else		            End if		          catch		          end try		        else		        end if		      end if		    end if		  next		  yourlist.listboxsort(1)		  yourlist.visible = true		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub loadsearchbox()		  if macosxsearchfield1.create(self) then		    macosxsearchfield1.visible = true		    macosxsearchfield1.placeholder = "Filter by Title"		    macosxsearchfield1.hassearchicon = true		    macosxsearchfield1.left = 444		    macosxsearchfield1.top = 6		    macosxsearchfield1.width = 205		    macosxsearchfield1.height = 22		  end		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub LoadWindowPosition()		  dim l as integer		  dim t as integer		  l =val(app.prefs.root.GetString("left"))		  t= val(app.prefs.root.GetString("top"))		  		  if l = 0 then		  else		    self.left = l		  end if		  if t = 0 then		  else		    self.top = t		  end if		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub LoadWindowSize()		  dim winwidth as integer		  dim winheight as integer		  winwidth=val(app.prefs.root.GetString("WindowWidth",cstr(me.MinWidth)))		  winheight= val(app.prefs.root.GetString("WindowHeight", cstr(me.MinHeight)))		  If me.minwidth = winwidth then		  else		    me.width = winwidth		  end if		  if me.minwidth = winheight then		  else		    me.height = winheight		  end if		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub melsegmentupdate(title as string, episode as string)		  dim socket2 as new httpsocket		  dim form2 as new dictionary		  dim data as string		  If List = "Anime" then		    form2.value("anime") = title		  elseif List = "Manga" then		    form2.value("Manga") = title		  end if		  form2.value("segment") = episode		  socket2.setFormData form2		  socket2.setrequestheader "Authorization","Basic " +  app.prefs.root.GetString("MelativeToken")		  data = socket2.post("http://melative.com/api/library/record.xml",10)		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub performsearch()		  dim socket1 as new httpsocket		  searchwheel.visible = true		  if searchbox.text = "" then		    self.errboxshow("MAL Client OS X was unable to perform a search.","Make sure you have typed in a search term before searching.")		    searchwheel.visible = false		  Else		    // perform search		    socket1.yield = true		    dim data as string		    dim s as string		    // Remove old results		    results.DeleteAllRows		    // retrieve results		    socket1.setrequestheader "Authorization","Basic " + app.loginenc		    s = EncodeURLComponent(searchbox.text )		    If list = "Anime" then		      data= socket1.get( "http://mal-api.com/anime/search?q=" + s + "&format=xml",10)		    else		      data= socket1.get( "http://mal-api.com/manga/search?q=" + s + "&format=xml",10)		    end if		    If socket1.httpstatuscode = 200 then		      // Populate Search Results		      dim XML as new XMLDocument		      XML.LoadXML(Data)		      r = getXMLroot(xml)		      p = getSearchList(r)		      c = p.Length - 1		      If p.length = 0 then		        searchresults.text = "No titles found for " + searchbox.text		      else		        searchresults.text =  cstr(p.Length) +  " title(s) found for " + searchbox.text		      end if		      //populate to results listbox		      results.visible = false		      for i = 0 to c		        d = parseAnime(p.Item(i))		        results.AddRow(d.Value("id"))		        results.Cell(results.LastIndex, 1) = d.Value("title")		        If list ="Anime" then		          if d.value("episodes") = "0" or d.value("episodes") = "" then		            results.Cell(results.LastIndex, 2) = "-"		          else		            results.Cell(results.LastIndex, 2) = d.Value("episodes")		          end if		          results.Cell(results.LastIndex, 3) = d.Value("type")		        else		          if d.value("chapters") = "0" or d.value("chapters") = "" then		            results.Cell(results.LastIndex, 2) = "-"		          else		            results.Cell(results.LastIndex, 2) = d.Value("chapters")		          end if		          if d.value("volumes") = "0" or d.value("volumes") = "" then		            results.Cell(results.LastIndex, 3) = "-"		          else		            results.Cell(results.LastIndex, 3) = d.Value("volumes")		          end if		        end if		        results.Cell(results.LastIndex, 4) = d.Value("members_score")		        results.Cell(results.LastIndex, 5) = d.Value("status")		      next		      results.visible = true		      searchwheel.visible = false		      xml = nil		      r = nil		      d = nil		      p = nil		    else		      // if data cannot be retrieved		      self.errboxshow("MAL Client OS X was unable to perform a search.","Cannot retrieve data. Check your internet connection and try your search again.")		      searchwheel.visible = false		    end if		  end if		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub refreshlist(silent as boolean)		  dim socket1 as new httpsocket		  dim listdata as string		  // Refreshes the list every 15 minutes		  // Obtain your anime list		  socket1.yield = true		  listwheel.visible = true		  If list= "Anime" then		    listdata= socket1.get("http://mal-api.com/animelist/" + app.prefs.root.GetString("Username") + "?format=xml" ,10)		  else		    listdata= socket1.get("http://mal-api.com/mangalist/" + app.prefs.root.GetString("Username") + "?format=xml" ,10)		  end if		  // debugyourlist.text = data		  If socket1.httpstatuscode = 200 then		    //Populate data to the list		    // clear list		    l = nil		    filtermenu.enabled = true		    dim XML as new XMLDocument		    xml.LoadXML(listdata)		    r = getXMLroot(xml)		    If list = "Anime" then		      p = getList(r)		    else		      p = getListManga(r)		    end if		    c = p.Length - 1		    l = new dictionary		    for i = 0 to c		      d = parseAnime(p.Item(i))		      l.value(d.value("id")) = d		    next		    filterlist		    xml = nil		    r = nil		    d = nil		    p = nil		    listwheel.visible = false		  else		    if silent = true then		    else		      self.errboxshow("There is a problem while retreving your list",   "Unable to refresh your Anime List. Make sure you are connected to the internet!")		    end if		    filtermenu.enabled = false		    listwheel.visible = false		  end if		  		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub SaveWindowPosition()		  app.prefs.root.SetString("top",cstr(self.top))		  app.prefs.root.SetString("left", cstr(self.left))		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub savewindowsize()		  app.prefs.root.SetString("windowwidth",cstr(self.width))		  app.prefs.root.SetString("windowheight", cstr(self.height))		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub SwitchList()		  results.DeleteAllRows		  yourlist.DeleteAllRows		  loading = true		  If list = "Anime" then		    //set up yourlist listbox		    yourlist.columncount=6		    yourlist.columnwidths="0,58%,10%,12%,10%,10%"		    yourlist.HasHeading=True		    yourlist.Heading(0)="ID"		    yourlist.Heading(1)="Title"		    yourlist.Heading(2)="Type"		    yourlist.Heading(3)="Episodes"		    yourlist.Heading(4)="Progress"		    yourlist.Heading(5)="Rating"		    yourlist.Column(0).UserResizable=false		    		    //set up Search listbox		    results.columncount=5		    results.columnwidths="0,70%,10%,10%,10%"		    results.HasHeading=True		    results.Heading(0)="ID"		    results.Heading(1)="Name of Series"		    results.Heading(2)="Episodes"		    results.Heading(3)="Type"		    results.Heading(4)="Rating"		    results.Column(0).UserResizable=false		    filtermenu.DeleteAllRows		    filtermenu.addrow("watching")		    filtermenu.addrow("completed")		    filtermenu.addrow("on-hold")		    filtermenu.addrow("dropped")		    filtermenu.addrow("plan to watch")		    filtermenu.ListIndex = 0		  else		    //set up yourlist listbox		    yourlist.columncount=5		    yourlist.columnwidths="0,68%,10%,12%,10%"		    yourlist.HasHeading=True		    yourlist.Heading(0)="ID"		    yourlist.Heading(1)="Title"		    yourlist.Heading(2)="Chapters"		    yourlist.Heading(3)="Volumes"		    yourlist.Heading(4)="Rating"		    yourlist.Column(0).UserResizable=false		    		    //set up Search listbox		    results.columncount=5		    results.columnwidths="0,70%,10%,10%,10%"		    results.HasHeading=True		    results.Heading(0)="ID"		    results.Heading(1)="Name of Series"		    results.Heading(2)="Chapters"		    results.Heading(3)="Volumes"		    results.Heading(4)="Rating"		    results.Column(0).UserResizable=false		    filtermenu.DeleteAllRows		    filtermenu.addrow("reading")		    filtermenu.addrow("completed")		    filtermenu.addrow("on-hold")		    filtermenu.addrow("dropped")		    filtermenu.addrow("plan to read")		    filtermenu.ListIndex = 0		  end if		  me.title = "MAL Client OS X - (Logged in as " + app.memusername + ") - " + list		  //Populate data to the list		  refreshlist(true)		  loading = false		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub updaterating(row as integer)		  dim t as dictionary		  t = l.value( yourlist.cell(row,0))		  If yourlist.cell(row,5) = t.value("score") and list = "anime" then		  elseif  yourlist.cell(row,4) = t.value("score") and list = "Manga" then		  else		    If val(yourlist.cell(row,5)) >10  and list = "Anime" then		      beep		      yourlist.cell(row,5) = t.value("score")		    elseif val(yourlist.cell(row,4)) >10  and list = "Manga" then		      beep		      yourlist.cell(row,5) = t.value("score")		    else		      If list = "Anime" then		        If  performupdate(yourlist.cell(row,0),t.value("watched_episodes"),yourlist.cell(row,5),t.value("watched_status")) = 200 then		          t.Value("score")  = Yourlist.Cell(row, 5)		          l.value( yourlist.cell(row,0)) = t		          yourlist.cell(row,5) = t.value("score")		        end if		      else		        If  performupdatemanga(yourlist.cell(row,0),t.value("chapters_read"), t.Value("volumes_read"),yourlist.cell(row,4),t.value("read_status")) = 200 then		          t.Value("score")  = Yourlist.Cell(row, 4)		          l.value( yourlist.cell(row,0)) = t		          yourlist.cell(row,4) = t.value("score")		        end if		      end if		    end if		  end if		End Sub	#tag EndMethod	#tag Property, Flags = &h0		c As Integer	#tag EndProperty	#tag Property, Flags = &h0		d As dictionary	#tag EndProperty	#tag Property, Flags = &h0		i As Integer	#tag EndProperty	#tag Property, Flags = &h0		l As dictionary	#tag EndProperty	#tag Property, Flags = &h0		List As String = "Manga"	#tag EndProperty	#tag Property, Flags = &h0		loading As boolean = true	#tag EndProperty	#tag Property, Flags = &h0		p As XmlNodeList	#tag EndProperty	#tag Property, Flags = &h0		r As XmlNode	#tag EndProperty#tag EndWindowCode#tag Events maintoolbar1	#tag Event		Sub Action(item As ToolItem)		  Select Case Item.Name		  Case "yourlist"		    pagepanel1.value = 0		    macosxsearchfield1.visible = true		    me.yourlist.pushed = true		  Case "searchtblbutton"		    pagepanel1.value = 1		    macosxsearchfield1.visible = false		    me.searchtblbutton.pushed = true		  Case "Refreshbut"		    refreshlist(false)		    Timer1.Reset		  Case "SwitchList"		    If list = "Anime" then		      switchlists.popupmenu1.ListIndex = 0		    else		      switchlists.popupmenu1.ListIndex = 1		    end if		    switchlists.ShowModalWithin(self)		    If switchlists.success = true then		      List = switchlists.popupmenu1.text		      switchlist		    end if		    switchlists.close		  End Select		End Sub	#tag EndEvent#tag EndEvents#tag Events Timer1	#tag Event		Sub Action()		  refreshlist(true)		End Sub	#tag EndEvent#tag EndEvents#tag Events DeleteBut	#tag Event		Sub Action()		  If yourlist.listindex = -1 then		    Msgbox "You need to select a title before you can remove it"		  else		    dim success as boolean		    success = self.DeleteSeries(yourlist.cell(yourlist.listindex,0),list)		  end if		End Sub	#tag EndEvent#tag EndEvents#tag Events UpdateBut	#tag Event		Sub Action()		  dim success as boolean		  If List = "Anime" then		    success = self.UpdateStatus(yourlist.cell(yourlist.listindex,0))		  else		    success = self.UpdateStatusManga(yourlist.cell(yourlist.listindex,0))		  end if		End Sub	#tag EndEvent#tag EndEvents#tag Events SearchButton	#tag Event		Sub Action()		  performsearch		End Sub	#tag EndEvent#tag EndEvents#tag Events SearchBox	#tag Event		Function KeyDown(Key As String) As Boolean		  if key = chr(13) then		    Searchbutton.Push		  end if		End Function	#tag EndEvent#tag EndEvents#tag Events MUpdate	#tag Event		Sub Action()		  If app.prefs.root.GetBoolean("MelativeUpdates",false) = true then		    dim mu as new melupdatewindow		    mu.truewindow.Title = "Post Melative Update - " + yourlist.cell(yourlist.listindex,1)		    mu.type = list		    mu.titletext.Text = yourlist.cell(yourlist.listindex,1)		    mu.checkbox1.value = true		    mu.Show		  else		    self.errboxshow("MAL Client OS X was unable to post a melative update on this series.","You must configure your melative credentials before you can post a melative update on this series. Configure your credentials, enable melative updating and try again.")		  end if		End Sub	#tag EndEvent#tag EndEvents#tag Events results	#tag Event		Sub DoubleClick()		  If results.listindex = -1 then		  else		    app.lookupwindowshow( me.cell(me.listindex,0),self.list)		  end if		  		End Sub	#tag EndEvent	#tag Event		Function KeyDown(Key As String) As Boolean		  if key = chr(13) then		    If results.listindex = -1 then		    else		      app.lookupwindowshow( me.cell(me.listindex,0),self.list)		    end if		  end if		End Function	#tag EndEvent	#tag Event		Function CellBackgroundPaint(g As Graphics, row As Integer, column As Integer) As Boolean		  if row mod 2 = 0 then		    g.forecolor = GetThemeColor(kThemeBrushListViewOddRowBackground)		  else		    g.forecolor = GetThemeColor(kThemeBrushListViewEvenRowBackground)		  end		  g.fillrect(0,0,g.width,g.height)		End Function	#tag EndEvent#tag EndEvents#tag Events MacOSXSearchField1	#tag Event		Sub Search(SearchString As String)		  If searchstring = "" then		    filterlist		  else		    listsearch(searchstring)		  end if		End Sub	#tag EndEvent	#tag Event		Sub SearchCleared()		  filterlist		End Sub	#tag EndEvent#tag EndEvents#tag Events filtermenu	#tag Event		Sub Change()		  If loading = false then		    filterlist		  end if		End Sub	#tag EndEvent#tag EndEvents#tag Events yourlist	#tag Event		Sub Change()		  If yourlist.listindex = -1 then		    updatebut.enabled = false		    deletebut.enabled = false		    mupdate.enabled = false		  else		    updatebut.enabled = true		    deletebut.enabled = true		    mupdate.enabled = true		  End If		End Sub	#tag EndEvent	#tag Event		Function KeyDown(Key As String) As Boolean		  if key = chr(13) then		    If yourlist.listindex = -1 then		    else		      app.lookupwindowshow( me.cell(me.listindex,0),self.list)		    end if		  end if		End Function	#tag EndEvent	#tag Event		Sub DoubleClick()		  If yourlist.listindex = -1 then		  else		    app.lookupwindowshow( me.cell(me.listindex,0),self.list)		  end if		End Sub	#tag EndEvent	#tag Event		Function CellBackgroundPaint(g As Graphics, row As Integer, column As Integer) As Boolean		  if row mod 2 = 0 then		    g.forecolor = GetThemeColor(kThemeBrushListViewOddRowBackground)		  else		    g.forecolor = GetThemeColor(kThemeBrushListViewEvenRowBackground)		  end		  g.fillrect(0,0,g.width,g.height)		End Function	#tag EndEvent	#tag Event		Function CellClick(row as Integer, column as Integer, x as Integer, y as Integer) As Boolean		  If list = "Anime" then		    If column = 3 then		      Me.CellType(row,column)=ListBox.TypeEditable		      Me.EditCell(row,column)		      dim t as dictionary		      t = l.value( yourlist.cell(yourlist.listindex,0))		      yourlist.cell(row,column) = t.Value("watched_episodes")		    elseif column = 5 then		      Me.CellType(row,column)=ListBox.TypeEditable		      Me.EditCell(row,column)		    end if		  else		    If  column = 2 then		      Me.CellType(row,column)=ListBox.TypeEditable		      Me.EditCell(row,column)		      dim t as dictionary		      t = l.value( yourlist.cell(yourlist.listindex,0))		      yourlist.cell(row,column) =t.Value("chapters_read")		    elseif column = 3 then		      Me.CellType(row,column)=ListBox.TypeEditable		      Me.EditCell(row,column)		      dim t as dictionary		      t = l.value( yourlist.cell(yourlist.listindex,0))		      yourlist.cell(row,column) = t.Value("volumes_read")		    elseif column = 4 then		      Me.CellType(row,column)=ListBox.TypeEditable		      Me.EditCell(row,column)		    end if		  end if		  		End Function	#tag EndEvent	#tag Event		Sub CellLostFocus(row as Integer, column as Integer)		  If list = "Anime" then		    If column = 3 then		      Me.CellType(row,column)=ListBox.TypeNormal		      dim t as dictionary		      t = l.value( yourlist.cell(row,0))		      If t.value("status") = "Not yet aired" then		      else		        If yourlist.cell(row,3) = t.value("watched_episodes") then		        else		          If val(yourlist.cell(row,3)) <= val(t.value("episodes")) or  t.value("episodes") = "0"  then		            If  performupdate(yourlist.cell(row,0),yourlist.cell(row,3),t.value("score"),t.value("watched_status")) = 200 then		              t.Value("watched_episodes")  = Yourlist.Cell(row, 3)		              l.value( yourlist.cell(row,0)) = t		              If app.prefs.root.GetBoolean("MelativeUpdates",false) = true then		                melsegmentupdate(t.value("title"),t.value("watched_episodes"))		              end if		            end if		          else		            beep		            yourlist.cell(row,3) = t.value("watched_episodes")		          end if		        end if		      end if		      //Refresh Values		      if t.value("episodes") = "0" or t.value("episodes") = "" then		        Yourlist.Cell(row, 3) = t.Value("watched_episodes") + "/ - "		        Yourlist.Cell(row, 4) = " - %"		      else		        Yourlist.Cell(row, 3) = t.Value("watched_episodes") + "/" + t.Value("episodes")		        Yourlist.Cell(row, 4) = cstr(round(val(t.Value("watched_episodes"))/val(t.value("episodes"))*100) )+ "%"		      end if		    end if		  else		    If column = 2 then		      Me.CellType(row,column)=ListBox.TypeNormal		      dim t as dictionary		      t = l.value( yourlist.cell(row,0))		      If t.value("status") = "Not yet published" then		      else		        If yourlist.cell(row,2) = t.value("chapters_read") then		        else		          If val(yourlist.cell(row,2)) <= val(t.value("chapters")) or  t.value("chapters") = "0"  then		            If  performupdatemanga(yourlist.cell(row,0),yourlist.cell(row,2), t.Value("volumes_read"),yourlist.cell(row,4),t.value("read_status")) = 200 then		              t.Value("chapters_read")  = Yourlist.Cell(row, 2)		              l.value( yourlist.cell(row,0)) = t		              If app.prefs.root.GetBoolean("MelativeUpdates",false) = true then		                melsegmentupdate(t.value("title"),t.value("chapters_read"))		              end if		            end if		          else		            beep		            yourlist.cell(row,2) = t.value("chapters_read")		          end if		        end if		      end if		      //Refresh Values		      if t.value("chapters") = "0" or t.value("chapters") = "" then		        Yourlist.Cell(row, 2) = t.Value("chapters_read") + "/ - "		      else		        Yourlist.Cell(row, 2) = t.Value("chapters_read") + "/" + t.Value("chapters")		      end if		    elseif column = 3 then		      Me.CellType(row,column)=ListBox.TypeNormal		      dim t as dictionary		      t = l.value( yourlist.cell(row,0))		      If t.value("status") = "Not yet published" then		      else		        If yourlist.cell(row,3) = t.value("volumes_read") then		        else		          If val(yourlist.cell(row,3)) <= val(t.value("volumes")) or  t.value("volumes") = "0"  then		            If  performupdatemanga(yourlist.cell(row,0), t.Value("chapters_read"),yourlist.cell(row,2),yourlist.cell(row,4),t.value("read_status")) = 200 then		              t.Value("volumes_read")  = Yourlist.Cell(row, 3)		              l.value( yourlist.cell(row,0)) = t		              If app.prefs.root.GetBoolean("MelativeUpdates",false) = true then		                melsegmentupdate(t.value("title"),t.value("chapters_read"))		              end if		            end if		          else		            beep		            yourlist.cell(row,3) = t.value("volumes_read")		          end if		        end if		      end if		      //Refresh Values		      if t.value("volumes") = "0" or t.value("volumes") = "" then		        Yourlist.Cell(row, 3) = t.Value("volumes_read") + "/ - "		      else		        Yourlist.Cell(row, 3) = t.Value("volumes_read") + "/" + t.Value("volumes")		      end if		    end if		  end if		  		  if column = 5 and list = "Anime" then		    updaterating(row)		  elseif column = 4 and list = "Manga" then		    updaterating(row)		  end if		  		End Sub	#tag EndEvent	#tag Event		Sub CellTextChange(row as Integer, column as Integer)		  If list = "Anime" then		    If column = 3 then		      Me.ActiveCell.Mask = "####"		    elseif column = 5 then		      Me.ActiveCell.Mask = "##"		    end if		  else		    If  column = 2 then		      Me.ActiveCell.Mask = "###"		    elseif column = 3 then		      Me.ActiveCell.Mask = "###"		    elseif column = 4 then		      Me.ActiveCell.Mask = "##"		    end if		  end if		  		  		End Sub	#tag EndEvent#tag EndEvents